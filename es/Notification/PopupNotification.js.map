{"version":3,"file":"PopupNotification.js","sources":["../../components/Notification/PopupNotification.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\r\n\r\nimport Button from \"components/Button\";\r\nimport Modal from \"components/Modal\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  id: number;\r\n  title?: string;\r\n  message?: string;\r\n  type: \"normal\" | \"yes/no\";\r\n  fnOk?: () => void;\r\n  fnYes?: () => void;\r\n  fnNo?: () => void;\r\n}\r\nexport default React.memo(\r\n  ({ title, message, type, fnOk, fnYes, fnNo }: IProps) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const _handleCloseNotification = useCallback(\r\n      (fn: any) => async () => {\r\n        setIsLoading(true);\r\n        fn && (await fn());\r\n\r\n        setIsLoading(false);\r\n      },\r\n      []\r\n    );\r\n\r\n    const buttonType = useMemo(\r\n      () =>\r\n        new Map()\r\n          .set(\r\n            \"normal\",\r\n            <WrapButton disable={isLoading}>\r\n              <Button fnClick={_handleCloseNotification(fnOk)}>OK</Button>\r\n            </WrapButton>\r\n          )\r\n          .set(\r\n            \"yes/no\",\r\n            <WrapButton disable={isLoading}>\r\n              <Button error fnClick={_handleCloseNotification(fnYes)}>\r\n                Yes\r\n              </Button>\r\n              <Button normal fnClick={_handleCloseNotification(fnNo)}>\r\n                No\r\n              </Button>\r\n            </WrapButton>\r\n          ),\r\n      [_handleCloseNotification, fnNo, fnOk, fnYes, isLoading]\r\n    );\r\n    return (\r\n      <Modal\r\n        styled={{\r\n          maxWidth: \"400px\",\r\n        }}\r\n        show\r\n        noFooter\r\n        heading={title}\r\n      >\r\n        <Wrap>\r\n          <p>{message}</p>\r\n          {buttonType.get(type)}\r\n        </Wrap>\r\n      </Modal>\r\n    );\r\n  }\r\n);\r\n\r\nconst Wrap = styled.div`\r\n  padding-bottom: 20px;\r\n\r\n  p {\r\n    margin: 0 auto 12px;\r\n    max-width: 300px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst WrapButton = styled.div<{ disable: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${({ disable }) =>\r\n    disable &&\r\n    `\r\n    button: {\r\n      user-select: none;\r\n      pointer-events: none;\r\n      opacity: .5;\r\n    }\r\n  `};\r\n`;\r\n"],"names":[],"mappings":";;;;;;;;;;AAeA,wBAAe,KAAK,CAAC,IAAI,CACvB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAU;IAClD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAElD,MAAM,wBAAwB,GAAG,WAAW,CAC1C,CAAC,EAAO,KAAK;QACX,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,EAAE,KAAK,MAAM,EAAE,EAAE,CAAC,CAAC;QAEnB,YAAY,CAAC,KAAK,CAAC,CAAC;KACrB,CAAA,EACD,EAAE,CACH,CAAC;IAEF,MAAM,UAAU,GAAG,OAAO,CACxB,MACE,IAAI,GAAG,EAAE;SACN,GAAG,CACF,QAAQ,EACR,oBAAC,UAAU,IAAC,OAAO,EAAE,SAAS;QAC5B,oBAAC,MAAM,IAAC,OAAO,EAAE,wBAAwB,CAAC,IAAI,CAAC,SAAa,CACjD,CACd;SACA,GAAG,CACF,QAAQ,EACR,oBAAC,UAAU,IAAC,OAAO,EAAE,SAAS;QAC5B,oBAAC,MAAM,IAAC,KAAK,QAAC,OAAO,EAAE,wBAAwB,CAAC,KAAK,CAAC,UAE7C;QACT,oBAAC,MAAM,IAAC,MAAM,QAAC,OAAO,EAAE,wBAAwB,CAAC,IAAI,CAAC,SAE7C,CACE,CACd,EACL,CAAC,wBAAwB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CACzD,CAAC;IACF,QACE,oBAAC,KAAK,IACJ,MAAM,EAAE;YACN,QAAQ,EAAE,OAAO;SAClB,EACD,IAAI,QACJ,QAAQ,QACR,OAAO,EAAE,KAAK;QAEd,oBAAC,IAAI;YACH,+BAAI,OAAO,CAAK;YACf,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAChB,CACD,EACR;AACJ,CAAC,CACF,CAAC;AAEF,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;CAQtB,CAAC;AAEF,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAsB;;;;IAI/C,CAAC,EAAE,OAAO,EAAE,KACZ,OAAO;IACP;;;;;;GAMD;CACF;;;;"}