{"version":3,"file":"index.js","sources":["../../components/Collapse/index.tsx"],"sourcesContent":["/**\r\n * Collapse for work\r\n * @prop {string} heading\r\n * @prop {JSX.Element[]} content - component\r\n * @prop {boolean} in - is show default\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { fontSize, fontWeight, opacity, space } from 'css/base';\r\n\r\nimport Icon from 'components/Icon';\r\nimport styled from 'styled-components';\r\nimport transition from 'css/transition';\r\n\r\nconst Collapse = styled.div`\r\n  position: relative;\r\n`;\r\n\r\ninterface PropsCollapse {\r\n  show: boolean;\r\n}\r\n\r\ninterface Props {\r\n  heading: string;\r\n  children: JSX.Element | string;\r\n  in?: boolean; // Default collapse is in\r\n  noCollapse?: boolean; // When true, you can't collapse and content will always open\r\n}\r\n\r\nexport default React.memo((props: Props) => {\r\n  const [show, setShow] = useState(!!props.in);\r\n\r\n  return (\r\n    <Collapse>\r\n      <CollapseHeading\r\n        show={props.noCollapse || show}\r\n        onClick={() => setShow(!show)}\r\n      >\r\n        {props.noCollapse || <Icon icon='i-arrow-down' small />}\r\n        <span>{props.heading}</span>\r\n        <CollapseHeadingDash />\r\n      </CollapseHeading>\r\n      <CollapseContent show={props.noCollapse || show}>\r\n        {props.children}\r\n      </CollapseContent>\r\n    </Collapse>\r\n  );\r\n});\r\n\r\n\r\nconst CollapseHeadingDash = styled.div`\r\n  align-self: flex-end;\r\n  transition: all 0.2s linear;\r\n  flex: 1 1 auto;\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    height: 1px;\r\n    background-color: var(--border);\r\n    right: 0;\r\n    bottom: 0;\r\n    transition-property: width;\r\n    width: 0;\r\n    ${transition.easeIn};\r\n  }\r\n`;\r\n\r\nconst CollapseHeading = styled.div<PropsCollapse>`\r\n  display: flex;\r\n  align-items: center;\r\n  ${fontWeight.semiBold};\r\n  ${fontSize.small};\r\n  ${opacity.SemiTransparent};\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  span {\r\n    width: max-content;\r\n  }\r\n\r\n  ${CollapseHeadingDash} {\r\n    &::after {\r\n      ${(props) => (props.show ? 'width:98%' : '')};\r\n    }\r\n  }\r\n\r\n  /* Icon */\r\n  div:first-of-type {\r\n    transition: all 0.2s linear;\r\n    ${(props) => (props.show ? '' : 'transform: rotate(180deg)')};\r\n    ${space.M2.r};\r\n  }\r\n`;\r\n\r\nconst CollapseContent = styled.div<PropsCollapse>`\r\n  width: 100%;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  transition-property: height;\r\n  transition-duration: 0.2s;\r\n  ${transition.linear};\r\n  ${space.M5.y};\r\n  ${space.M0.x};\r\n  ${(props) => (props.show ? 'transform: scaleY(1)' : '')};\r\n`;\r\n"],"names":["fontWeight.semiBold","fontSize.small","opacity.SemiTransparent","space.M2","space.M5","space.M0"],"mappings":";;;;;;AAAA;;;;;;AAcA,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAA;;CAE1B,CAAC;AAaF,YAAe,KAAK,CAAC,IAAI,CAAC,CAAC,KAAY;IACrC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAE7C,QACE,oBAAC,QAAQ;QACP,oBAAC,eAAe,IACd,IAAI,EAAE,KAAK,CAAC,UAAU,IAAI,IAAI,EAC9B,OAAO,EAAE,MAAM,OAAO,CAAC,CAAC,IAAI,CAAC;YAE5B,KAAK,CAAC,UAAU,IAAI,oBAAC,IAAI,IAAC,IAAI,EAAC,cAAc,EAAC,KAAK,SAAG;YACvD,kCAAO,KAAK,CAAC,OAAO,CAAQ;YAC5B,oBAAC,mBAAmB,OAAG,CACP;QAClB,oBAAC,eAAe,IAAC,IAAI,EAAE,KAAK,CAAC,UAAU,IAAI,IAAI,IAC5C,KAAK,CAAC,QAAQ,CACC,CACT,EACX;AACJ,CAAC,CAAC,CAAC;AAGH,MAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;;;;MAehC,UAAU,CAAC,MAAM;;CAEtB,CAAC;AAEF,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAe;;;IAG7CA,QAAmB;IACnBC,KAAc;IACdC,eAAuB;;;;;;;;IAQvB,mBAAmB;;QAEf,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,GAAG,WAAW,GAAG,EAAE,CAAC;;;;;;;MAO5C,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,2BAA2B,CAAC;MAC1DC,EAAQ,CAAC,CAAC;;CAEf,CAAC;AAEF,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAe;;;;;;IAM7C,UAAU,CAAC,MAAM;IACjBC,EAAQ,CAAC,CAAC;IACVC,EAAQ,CAAC,CAAC;IACV,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,GAAG,sBAAsB,GAAG,EAAE,CAAC;CACxD;;;;"}