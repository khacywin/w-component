{"version":3,"file":"Switch.js","sources":["../../components/Form/Switch.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { borderRadius, fontSize, fontWeight } from \"css/base\";\r\n\r\nimport generatedId from \"helps/generatedId\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SwitchWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  user-select: none;\r\n\r\n  h5 {\r\n    ${fontSize.normal};\r\n    ${fontWeight.normal};\r\n  }\r\n  h6 {\r\n    opacity: 0.8;\r\n    ${fontWeight.normal};\r\n    ${fontSize.small};\r\n  }\r\n\r\n  input {\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n`;\r\n\r\ninterface PropsSwitch {\r\n  active: boolean;\r\n}\r\nconst SwitchButton = styled.label`\r\n  position: absolute;\r\n  display: block;\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  top: 1px;\r\n  left: 2px;\r\n  cursor: pointer;\r\n  background-color: var(--backgroundContent);\r\n  transition: transform 0.2s linear;\r\n`;\r\n\r\nconst SwitchBox = styled.label<PropsSwitch>`\r\n  display: block;\r\n  position: relative;\r\n  width: 40px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  background-color: ${(props) =>\r\n    props.active ? \"var(--primary)\" : \"var(--shadow)\"};\r\n  ${borderRadius.around};\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n    ${SwitchButton}{\r\n      transform: translate(100%,0);\r\n    }\r\n  `\r\n      : `\r\n  ${SwitchButton}{\r\n      transform: translate(0,0);\r\n    }`}\r\n`;\r\n\r\ninterface Props {\r\n  label?: string | JSX.Element;\r\n  labelSub?: string;\r\n  defaultValue?: boolean;\r\n  value?: boolean;\r\n  fnChange?: (val: boolean) => void;\r\n}\r\nexport default React.memo((props: Props) => {\r\n  const id = generatedId();\r\n\r\n  const [value, setValue] = useState(\r\n    props.value || props.defaultValue || false\r\n  );\r\n\r\n  const _onChange = useCallback(() => {\r\n    if (props.fnChange) {\r\n      props.fnChange(!value);\r\n    }\r\n\r\n    setValue(!value);\r\n  }, [props, value]);\r\n\r\n  useEffect(() => {\r\n    props.value && setValue(props.value);\r\n  }, [props.value]);\r\n\r\n  return (\r\n    <SwitchWrap>\r\n      <div>\r\n        <h5>{props.label}</h5>\r\n        {props.labelSub ? <h6>{props.labelSub}</h6> : \"\"}\r\n      </div>\r\n      <input id={id} type=\"checkbox\" checked={value} onChange={_onChange} />\r\n      <SwitchBox active={value} htmlFor={id}>\r\n        <SwitchButton htmlFor={id} />\r\n      </SwitchBox>\r\n    </SwitchWrap>\r\n  );\r\n});\r\n"],"names":["fontSize.normal","fontWeight.normal","fontSize.small","borderRadius.around"],"mappings":";;;;;AAMA,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;MAMvBA,MAAe;MACfC,QAAiB;;;;MAIjBA,QAAiB;MACjBC,KAAc;;;;;;;;CAQnB,CAAC;AAKF,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAA;;;;;;;;;;;CAWhC,CAAC;AAEF,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAa;;;;;;;sBAOrB,CAAC,KAAK,KACxB,KAAK,CAAC,MAAM,GAAG,gBAAgB,GAAG,eAAe;IACjDC,MAAmB;IACnB,CAAC,KAAK,KACN,KAAK,CAAC,MAAM;MACR;MACF,YAAY;;;GAGf;MACK;IACJ,YAAY;;MAEV;CACL,CAAC;AASF,aAAe,KAAK,CAAC,IAAI,CAAC,CAAC,KAAY;IACrC,MAAM,EAAE,GAAG,WAAW,EAAE,CAAC;IAEzB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAChC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,IAAI,KAAK,CAC3C,CAAC;IAEF,MAAM,SAAS,GAAG,WAAW,CAAC;QAC5B,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;KAClB,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAEnB,SAAS,CAAC;QACR,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAElB,QACE,oBAAC,UAAU;QACT;YACE,gCAAK,KAAK,CAAC,KAAK,CAAM;YACrB,KAAK,CAAC,QAAQ,GAAG,gCAAK,KAAK,CAAC,QAAQ,CAAM,GAAG,EAAE,CAC5C;QACN,+BAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAC,UAAU,EAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,GAAI;QACtE,oBAAC,SAAS,IAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;YACnC,oBAAC,YAAY,IAAC,OAAO,EAAE,EAAE,GAAI,CACnB,CACD,EACb;AACJ,CAAC,CAAC;;;;"}