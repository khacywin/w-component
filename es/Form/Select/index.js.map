{"version":3,"file":"index.js","sources":["../../../components/Form/Select/index.tsx"],"sourcesContent":["/**\r\n *\r\n * @prop {string} label\r\n * @prop {(val: any) => void} fnChange\r\n * @prop {boolean} request\r\n * @prop {string} defaultValue\r\n * @prop {JSX.Element[]} children\r\n * @prop {boolean} isSearch\r\n */\r\n\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport FormGroup from 'components/atoms/Form/_FormGroup';\r\nimport SelectListOption from './Select.SelectListOption';\r\nimport { TSelectOption } from 'util/type';\r\nimport generatedId from 'helps/generatedId';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  name?: string;\r\n  request?: boolean;\r\n  children: any;\r\n  defaultValue?: any;\r\n  isSearch?: boolean; // Does Select component have search wrap?\r\n  style?: React.CSSProperties;\r\n  isMultiple?: boolean;\r\n  value?: any;\r\n  fnChange?: (val: any) => void;\r\n}\r\n\r\nexport default React.memo((props: Props) => {\r\n  const id = generatedId('input');\r\n  const [list, setList] = useState<TSelectOption[]>([]);\r\n  const [valState, setValState] = useState<any>();\r\n\r\n  // Convert list options from children\r\n  const convertOptionsFromChildren = useCallback((children: JSX.Element[]) => {\r\n    const arrOptions: TSelectOption[] = [];\r\n    children?.forEach((item: any) => {\r\n      if (item.length !== 0) {\r\n        if (item.type === 'option') {\r\n          arrOptions.push({\r\n            value: item.props.value,\r\n            label: item.props.children,\r\n          });\r\n        } else if (item.type === 'optgroup') {\r\n          arrOptions.push({\r\n            group: {\r\n              label: item.props.label,\r\n              options: convertOptionsFromChildren(item.props.children),\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return arrOptions;\r\n  }, []);\r\n\r\n  /**\r\n   * @param {string} _val\r\n   */\r\n  const handleSelect = useCallback(\r\n    (_val: string | string[]) => {\r\n      setValState(_val);\r\n      props?.fnChange(_val);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  /**\r\n   * When props.list change\r\n   * So it only action as constructor\r\n   */\r\n  useEffect(() => {\r\n    /**\r\n     * TODO\r\n     * Convert list option from children\r\n     */\r\n    let arrOptions: TSelectOption[] = convertOptionsFromChildren(\r\n      props.children\r\n    );\r\n\r\n    if (!arrOptions.length && !props.isMultiple)\r\n      arrOptions = [\r\n        {\r\n          value: '',\r\n          label: '-- Select item',\r\n        },\r\n      ];\r\n    setList(arrOptions);\r\n  }, [convertOptionsFromChildren, props.children, props.isMultiple]);\r\n\r\n  useEffect(() => {\r\n    setValState(props.value);\r\n  }, [props.value]);\r\n\r\n  useEffect(() => {\r\n    props.defaultValue && setValState(props.defaultValue);\r\n  }, [props.defaultValue]);\r\n\r\n  return (\r\n    <FormGroup\r\n      style={props.style || {}}\r\n      labelFocus={true}\r\n      isFocus={true}\r\n      label={props.label}\r\n      id={id}\r\n      className={'w-select' + (props.isMultiple ? ' w-select-multiple' : '')}\r\n    >\r\n      <SelectListOption\r\n        isSearch={props.isSearch}\r\n        list={[...list]}\r\n        isMultiple={props.isMultiple}\r\n        fnSelect={handleSelect}\r\n        value={valState}\r\n      />\r\n    </FormGroup>\r\n  );\r\n});\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;AA8BA,YAAe,KAAK,CAAC,IAAI,CAAC,CAAC,KAAY;IACrC,MAAM,EAAE,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;IAChC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAkB,EAAE,CAAC,CAAC;IACtD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,EAAO,CAAC;;IAGhD,MAAM,0BAA0B,GAAG,WAAW,CAAC,CAAC,QAAuB;QACrE,MAAM,UAAU,GAAoB,EAAE,CAAC;QACvC,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,CAAC,CAAC,IAAS;YAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC1B,UAAU,CAAC,IAAI,CAAC;wBACd,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;wBACvB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;qBAC3B,CAAC,CAAC;iBACJ;qBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;oBACnC,UAAU,CAAC,IAAI,CAAC;wBACd,KAAK,EAAE;4BACL,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;4BACvB,OAAO,EAAE,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;yBACzD;qBACF,CAAC,CAAC;iBACJ;aACF;SACF,EAAE;QAEH,OAAO,UAAU,CAAC;KACnB,EAAE,EAAE,CAAC,CAAC;;;;IAKP,MAAM,YAAY,GAAG,WAAW,CAC9B,CAAC,IAAuB;QACtB,WAAW,CAAC,IAAI,CAAC,CAAC;QAClB,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,IAAI,EAAE;KACvB,EACD,CAAC,KAAK,CAAC,CACR,CAAC;;;;;IAMF,SAAS,CAAC;;;;;QAKR,IAAI,UAAU,GAAoB,0BAA0B,CAC1D,KAAK,CAAC,QAAQ,CACf,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU;YACzC,UAAU,GAAG;gBACX;oBACE,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,gBAAgB;iBACxB;aACF,CAAC;QACJ,OAAO,CAAC,UAAU,CAAC,CAAC;KACrB,EAAE,CAAC,0BAA0B,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;IAEnE,SAAS,CAAC;QACR,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC1B,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAElB,SAAS,CAAC;QACR,KAAK,CAAC,YAAY,IAAI,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KACvD,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAEzB,QACE,oBAAC,SAAS,IACR,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,EACxB,UAAU,EAAE,IAAI,EAChB,OAAO,EAAE,IAAI,EACb,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,EAAE,EAAE,EAAE,EACN,SAAS,EAAE,UAAU,IAAI,KAAK,CAAC,UAAU,GAAG,oBAAoB,GAAG,EAAE,CAAC;QAEtE,oBAAC,gBAAgB,IACf,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,EACf,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,QAAQ,EAAE,YAAY,EACtB,KAAK,EAAE,QAAQ,GACf,CACQ,EACZ;AACJ,CAAC,CAAC;;;;"}