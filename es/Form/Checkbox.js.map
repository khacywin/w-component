{"version":3,"file":"Checkbox.js","sources":["../../components/Form/Checkbox.tsx"],"sourcesContent":["/**\r\n * Checkbox component\r\n * @props color: color of checkbox when checked\r\n * @props checked\r\n * @props fnChanged: function\r\n * @props labelChecked\r\n */\r\n\r\nimport React, { ChangeEvent, useCallback, useMemo } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nimport colorSVG from 'helps/colorSVG';\r\nimport generatedId from 'helps/generatedId';\r\nimport { rgba } from 'polished';\r\nimport { zIndex } from 'css/base';\r\n\r\ninterface Props {\r\n  color?: string;\r\n  labelChecked?: string[];\r\n  label?: string | JSX.Element;\r\n  id?: string;\r\n  name?: string;\r\n  value?: boolean;\r\n  className?: string;\r\n  fnChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport default React.memo((props: Props) => {\r\n  const id = props.id || generatedId();\r\n  const labelChecked = useMemo(() => props.labelChecked ? props.labelChecked : ['', ''], [props.labelChecked]);\r\n\r\n  const _onChange = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      props.fnChange && props.fnChange(e.target.checked);\r\n    },\r\n    [props]\r\n  );\r\n\r\n  return (\r\n    <Checkbox\r\n      className={'checkbox ' + (props.className ? props.className : '')}\r\n      color={props.color}\r\n      data-is-aria-label={props.labelChecked ? 'on' : 'off'}\r\n      aria-label={props.value ? labelChecked[1] : labelChecked[0]}\r\n      data-label-position='left-bottom'\r\n    >\r\n      <input\r\n        id={id}\r\n        type='checkbox'\r\n        checked={props.value}\r\n        name={props.name}\r\n        onChange={_onChange}\r\n      />\r\n      <label htmlFor={id}>\r\n        <i className='i-tick' />\r\n      </label>\r\n      <label htmlFor={id}>\r\n        <span>{props.label}</span>\r\n      </label>\r\n    </Checkbox>\r\n  );\r\n});\r\n\r\n\r\nconst aniScale = keyframes`\r\n  from {\r\n    transform: scale(0);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\ninterface PropsWrap {\r\n  color: string;\r\n}\r\nconst Checkbox = styled.div<PropsWrap>`\r\n  display: flex;\r\n  align-items: flex-start;\r\n\r\n  input {\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  label {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    width: 100%;\r\n  }\r\n\r\n  & > label:first-of-type {\r\n    display: block;\r\n    flex: 0 0 15px;\r\n    width: 15px;\r\n    height: 15px;\r\n    position: relative;\r\n    top: -1px;\r\n    border: 1px solid;\r\n    border-color: ${(props) => (props.color ? props.color : 'var(--black)')};\r\n    border-radius: 5px;\r\n\r\n    &::after {\r\n      position: absolute;\r\n      content: '';\r\n      width: 102%;\r\n      height: 100%;\r\n      top: -6%;\r\n      left: 15%;\r\n      display: none;\r\n      animation: ${aniScale} 0.1s linear;\r\n      ${zIndex.front_1};\r\n      ${(props) => props.color && colorSVG(props.color)}\r\n    }\r\n    i {\r\n      position: absolute;\r\n      width: 5px;\r\n      height: 5px;\r\n      top: 1px;\r\n      right: 50%;\r\n      display: none;\r\n      background-color: inherit;\r\n      color: ${({ color }) => color};\r\n      ${zIndex.front};\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${rgba('#bdc3c7', 0.1)};\r\n      &::before {\r\n        background-color: ${rgba('#bdc3c7', 0.1)};\r\n      }\r\n    }\r\n  }\r\n\r\n  & > label:last-of-type {\r\n    margin-left: 5px;\r\n    ${({ color }) => color && colorSVG(color)};\r\n  }\r\n\r\n  input:checked ~ label::after,\r\n  input:checked ~ label i {\r\n    display: block;\r\n  }\r\n\r\n  input:checked ~ label {\r\n    border-right: none;\r\n    border-top: none;\r\n  }\r\n`;\r\n"],"names":["Checkbox","zIndex.front_1","zIndex.front"],"mappings":";;;;;;;;AAAA;;;;;;;AA2BA,eAAe,KAAK,CAAC,IAAI,CAAC,CAAC,KAAY;IACrC,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,WAAW,EAAE,CAAC;IACrC,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAE7G,MAAM,SAAS,GAAG,WAAW,CAC3B,CAAC,CAAgC;QAC/B,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpD,EACD,CAAC,KAAK,CAAC,CACR,CAAC;IAEF,QACE,oBAACA,UAAQ,IACP,SAAS,EAAE,WAAW,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,EACjE,KAAK,EAAE,KAAK,CAAC,KAAK,wBACE,KAAK,CAAC,YAAY,GAAG,IAAI,GAAG,KAAK,gBACzC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,yBACvC,aAAa;QAEjC,+BACE,EAAE,EAAE,EAAE,EACN,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,KAAK,CAAC,KAAK,EACpB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,QAAQ,EAAE,SAAS,GACnB;QACF,+BAAO,OAAO,EAAE,EAAE;YAChB,2BAAG,SAAS,EAAC,QAAQ,GAAG,CAClB;QACR,+BAAO,OAAO,EAAE,EAAE;YAChB,kCAAO,KAAK,CAAC,KAAK,CAAQ,CACpB,CACC,EACX;AACJ,CAAC,CAAC,CAAC;AAGH,MAAM,QAAQ,GAAG,SAAS,CAAA;;;;;;;CAOzB,CAAC;AAKF,MAAMA,UAAQ,GAAG,MAAM,CAAC,GAAG,CAAW;;;;;;;;;;;;;;;;;;;;;;;oBAuBlB,CAAC,KAAK,MAAM,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC;;;;;;;;;;;mBAWxD,QAAQ;QACnBC,OAAc;QACd,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;;;;;;;;;;eAUxC,CAAC,EAAE,KAAK,EAAE,KAAK,KAAK;QAC3BC,KAAY;;;;0BAIM,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;;4BAElB,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;;;;;;;MAO1C,CAAC,EAAE,KAAK,EAAE,KAAK,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC;;;;;;;;;;;;CAY5C;;;;"}